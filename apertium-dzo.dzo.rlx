# Firstly, we need to define what tags should be considered sentence delimiters. For this example, only full stop is set as delimiter.
DELIMITERS = "<།>" ;

# We can define sets for common tag clusters
LIST Case = (n s) (n p) ; # A set that matches either a Noun Singular or a Noun Plural
LIST ALL = (n) (v) (vbser) (vaux) (adj) (adv) (prn) (num) (det) (cnjsub) ; # A set for anything

SECTION

# If there is nothing before the word, select the adv reading
SELECT (adv) IF
             (NOT 1 ALL) ;

# If there is something before the word, remove the adv reading
REMOVE (adv) IF
             (1 ALL) ;

# If there is nothing after the word, select the imp reading
SELECT (imp) IF
             (NOT -1 ALL) ;

# If there is something before the word, remove the imp reading
REMOVE (imp) IF
             (-1 ALL) ;

# If there is something before the word and after the word, select the cnjsub reading
SELECT (cnjsub) IF
             (1 ALL)
             (-1 ALL) ;

# If there is nothing before the word or after the word, remove the cnjsub reading
REMOVE (cnjsub) IF
             (NOT 1 ALL) OR
             (NOT -1 ALL) ;

# Resources:
# http://visl.sdu.dk/cg3.html
# http://groups.google.com/group/constraint-grammar
# http://kevindonnelly.org.uk/2010/05/constraint-grammar-tutorial/
# http://wiki.apertium.org/wiki/Constraint_Grammar
# http://wiki.apertium.org/wiki/Apertium_and_Constraint_Grammar
